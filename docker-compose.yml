version: '3.8'

services:
  telegram-bot:
    build: .
    container_name: telegram-bot
    restart: unless-stopped
    networks:
      - bot-network
    
    # Змінні середовища
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - BOT_NAME=${BOT_NAME:-Telegram Bot}
      - BOT_VERSION=${BOT_VERSION:-1.0.0}
      - BOT_DEVELOPER=${BOT_DEVELOPER:-Your Name}
      - BOT_EMAIL=${BOT_EMAIL:-your.email@example.com}
      - BOT_GITHUB=${BOT_GITHUB:-github.com/yourusername}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONUNBUFFERED=1
      # Joke API configuration
      - JOKES_API_URL=http://joke-api:8080
      - JOKES_API_ENDPOINT=/api/getJoke
      - JOKES_API_TIMEOUT=10
      - JOKES_API_KEY=${JOKES_API_KEY:-}
    
    # Монтування томів (опціонально)
    volumes:
      - ./logs:/app/logs
    
    # Залежності
    depends_on:
      - joke-api

  joke-api:
    build: ../JokeWebApi
    container_name: joke-api
    restart: unless-stopped
    networks:
      - bot-network
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - NODE_ENV=production


# Додаткові сервіси (опціонально)
# services:
#   redis:
#     image: redis:7-alpine
#     container_name: telegram-bot-redis
#     restart: unless-stopped
#     ports:
#       - "6379:6379"
#   
#   database:
#     image: postgres:15-alpine
#     container_name: telegram-bot-db
#     restart: unless-stopped
#     environment:
#       - POSTGRES_DB=telegram_bot
#       - POSTGRES_USER=bot_user
#       - POSTGRES_PASSWORD=bot_password
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"

# volumes:
#   postgres_data:

# Networks
networks:
  bot-network:
    driver: bridge
